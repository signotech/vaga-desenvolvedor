version: '3.8'

services:
  backend:
    build:
      context: ./backend
    container_name: backend_app
    ports:
      - "9000:9000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - db
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    container_name: backend_webserver
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www/html
      - ./backend/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    container_name: frontend_app
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    networks:
      - app-network

  db:
    image: postgres:14
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
